name: app-store

on:
  push:
    branches: [ test-flight, master ]
    tags: [ v* ]

jobs:
  deploy:
    runs-on: macos-13

    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15'
      - name: Checkout project
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v3
        id: pod-cache
        with:
          path: ios/Pods
          key: ${{ hashFiles('ios/podfile.lock') }}
      # - name: Create sentry files
      #   env:
      #     SENTRY_PROPERTIES: ${{ secrets.SENTRY_PROPERTIES }}
      #   run: |
      #     exec .github/scripts/create-sentry-files.sh
      - name: Create .env
        env:
          REVENUE_CAT_IOS_KEY: ${{ secrets.REVENUE_CAT_IOS_KEY }}
          REVENUE_CAT_ANDROID_KEY: ${{ secrets.REVENUE_CAT_ANDROID_KEY }}
          FACEBOOK_APP_ID: ${{ secrets.FACEBOOK_APP_ID }}
          FACEBOOK_CLIENT_TOKEN: ${{ secrets.FACEBOOK_CLIENT_TOKEN }}
          ROOT_API_URL: ${{ secrets.ROOT_API_URL }}
        run: |
          echo REVENUE_CAT_IOS_KEY=$REVENUE_CAT_IOS_KEY >> .env
          echo REVENUE_CAT_ANDROID_KEY=$REVENUE_CAT_ANDROID_KEY >> .env
          echo FACEBOOK_APP_ID=$FACEBOOK_APP_ID >> .env
          echo INSTABUG_DEV_TOKEN=$INSTABUG_DEV_TOKEN >> .env
          echo INSTABUG_PROD_TOKEN=$INSTABUG_PROD_TOKEN >> .env
          echo ROOT_API_URL=$ROOT_API_URL >> .env
          echo -n FACEBOOK_CLIENT_TOKEN=$FACEBOOK_CLIENT_TOKEN >> .env
      - name: Install npm dependencies
        run: |
          yarn
      - name: Run tests
        run: |
          yarn test
      - name: Decode provisioning profiles
        env:
          PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}
          PROVISIONING_PROFILE_DATA_DEV: ${{ secrets.PROVISIONING_PROFILE_DATA_DEV }}
          WATCH_APP_PROVISIONING_PROFILE_DATA: ${{ secrets.WATCH_APP_PROVISIONING_PROFILE_DATA }}
          WATCH_APP_PROVISIONING_PROFILE_DATA_DEV: ${{ secrets.WATCH_APP_PROVISIONING_PROFILE_DATA_DEV }}
          WATCH_APP_EXTENSION_PROVISIONING_PROFILE_DATA: ${{ secrets.WATCH_APP_EXTENSION_PROVISIONING_PROFILE_DATA }}
          WATCH_APP_EXTENSION_PROVISIONING_PROFILE_DATA_DEV: ${{ secrets.WATCH_APP_EXTENSION_PROVISIONING_PROFILE_DATA_DEV }}
        run: |
          echo "$WATCH_APP_PROVISIONING_PROFILE_DATA" | base64 --decode > profileWatch.mobileprovision
          echo "$WATCH_APP_EXTENSION_PROVISIONING_PROFILE_DATA" | base64 --decode > profileWatchExtension.mobileprovision
          echo "$WATCH_APP_PROVISIONING_PROFILE_DATA_DEV" | base64 --decode > profileWatchDev.mobileprovision
          echo "$WATCH_APP_EXTENSION_PROVISIONING_PROFILE_DATA_DEV" | base64 --decode > profileWatchExtensionDev.mobileprovision
          echo "$PROVISIONING_PROFILE_DATA" | base64 --decode > profile.mobileprovision
          echo "$PROVISIONING_PROFILE_DATA_DEV" | base64 --decode > profileDev.mobileprovision
      - name: Set up prod environment
        env:
          GOOGLE_SERVICE_INFO: ${{ secrets.GOOGLE_SERVICE_INFO }}
        run: |
          exec .github/scripts/setup-env.sh
      - uses: yanamura/ios-bump-version@v1.7.0
        with:
          build-number: ${{github.run_number}}
          project-path: ios #Example for React Native project
      - name: Pod install
        run: |
          cd ios
          pod install
      - name: Build app
        uses: yukiarrr/ios-build-action@v1.11.1
        with:
          project-path: ios/HealthAndMovement.xcodeproj
          p12-base64: |
            ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
            ${{ secrets.SIGNING_CERTIFICATE_P12_DATA_DEV }}
          mobileprovision-path: |
            profileWatch.mobileprovision
            profileWatchExtension.mobileprovision
            profileWatchDev.mobileprovision
            profileWatchExtensionDev.mobileprovision
            profile.mobileprovision
            profileDev.mobileprovision
          # mobileprovision-base64: |
          #   ${{ secrets.PROVISIONING_PROFILE_DATA }}
          #   ${{ secrets.PROVISIONING_PROFILE_DATA_DEV }}
          #   ${{ secrets.WATCH_APP_PROVISIONING_PROFILE_DATA }}
          #   ${{ secrets.WATCH_APP_PROVISIONING_PROFILE_DATA_DEV }}
          #   ${{ secrets.WATCH_APP_EXTENSION_PROVISIONING_PROFILE_DATA}}
          #   ${{ secrets.WATCH_APP_EXTENSION_PROVISIONING_PROFILE_DATA_DEV }}
          code-signing-identity: iOS Distribution
          team-id: ${{ secrets.TEAM_ID }}
          workspace-path: ios/HealthAndMovement.xcworkspace # optional
          export-method: "app-store"
          export-options: ios/exportOptions.plist
      #   run: |
      #     cd ios
      #     xcodebuild clean -workspace HealthAndMovement.xcworkspace -scheme HealthAndMovement
      #     xcodebuild build -workspace HealthAndMovement.xcworkspace -scheme HealthAndMovement
      #     xcodebuild archive -workspace HealthAndMovement.xcworkspace -scheme HealthAndMovement -archivePath archive.xcarchive
      #     xcodebuild -exportArchive -archivePath archive.xcarchive -exportPath . -exportOptionsPlist exportOptions.plist
      - name: Upload app to App Store Connect
        env:
          APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
        run: |
          ls
          ls ios
          xcrun altool --upload-app -t ios -f "ios/output.ipa" -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"
      - name: Setup Sentry CLI
        uses: mathieu-bour/setup-sentry-cli@v1
        with:
          version: latest # optional if 'latest'
          token: ${{ SECRETS.SENTRY_TOKEN }} # from GitHub secrets
          organization: henry-moule
          project: health-and-movement
      - name: Upload dSYM to Sentry
        env:
          SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
        run: |
          ls
          DSYM=$(find ios/archive.xcarchive/dSYMs -name "*.dSYM")
          echo $DSYM
          ls
          sentry-cli --auth-token $SENTRY_TOKEN upload-dif --org henry-moule --project health-and-movement $DSYM
          # ios/Pods/FirebaseCrashlytics/upload-symbols -gsp ios/HealthAndMovement/GoogleService-Info.plist -p ios $DSYM
