name: app-store

on:
  push:
    branches: [ test-flight, master ]
    tags: [ v* ]

jobs:
  deploy:
    runs-on: macos-latest

    steps:
      - uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: 'latest'
      - name: Checkout project
        uses: actions/checkout@v2
      # - name: Create sentry files
      #   env:
      #     SENTRY_PROPERTIES: ${{ secrets.SENTRY_PROPERTIES }}
      #   run: |
      #     exec .github/scripts/create-sentry-files.sh
      - name: Create .env
        env:
          REVENUE_CAT_IOS_KEY: ${{ secrets.REVENUE_CAT_IOS_KEY }}
          REVENUE_CAT_ANDROID_KEY: ${{ secrets.REVENUE_CAT_ANDROID_KEY }}
          FACEBOOK_APP_ID: ${{ secrets.FACEBOOK_APP_ID }}
          FACEBOOK_CLIENT_TOKEN: ${{ secrets.FACEBOOK_CLIENT_TOKEN }}
          INSTABUG_DEV_TOKEN: ${{ secrets.INSTABUG_DEV_TOKEN }}
          INSTABUG_PROD_TOKEN: ${{ secrets.INSTABUG_PROD_TOKEN }}
        run: |
          exec .github/scripts/create-env.sh
      - name: Install npm dependencies
        run: |
          yarn
      - name: Run tests
        run: |
          yarn test
      - name: Set environment variables from project settings
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          exec .github/scripts/set-env-from-xcodeproj.sh
      - name: Import signing certificate
        env:
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
          #SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
        run: |
          exec .github/scripts/import-certificate.sh
      - name: Import provisioning profile
        env:
          PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}
          WATCH_APP_PROVISIONING_PROFILE_DATA: ${{ secrets.WATCH_APP_PROVISIONING_PROFILE_DATA }}
          WATCH_APP_EXTENSION_PROVISIONING_PROFILE_DATA: ${{ secrets.WATCH_APP_EXTENSION_PROVISIONING_PROFILE_DATA }}
        run: |
          exec .github/scripts/import-profile.sh
      - name: Set up prod environment
        env:
          GOOGLE_SERVICE_INFO: ${{ secrets.GOOGLE_SERVICE_INFO }}
        run: |
          exec .github/scripts/setup-env.sh
      - uses: yanamura/ios-bump-version@v1
        with:
          build-number: ${{github.run_number}}
          project-path: ios #Example for React Native project
      - name: Build app
        run: |
          cd ios
          pod install
          sudo gem install fastlane
          fastlane gym --workspace "HealthAndMovement.xcworkspace" --scheme "HealthAndMovement" --clean
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build.log
          path: ~/Library/Logs/gym/*.log
      - name: Upload release assets
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ios/${{ env.PRODUCT_NAME }}.ipa
            ios/${{ env.PRODUCT_NAME }}.app.dSYM.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload app to App Store Connect
        env:
          APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
        run: |
          xcrun altool --upload-app -t ios -f "ios/$PRODUCT_NAME.ipa" -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"
      # - name: Upload dSYM to Firebase
      #   run: |
      #     exec .github/scripts/upload-dsym.sh
