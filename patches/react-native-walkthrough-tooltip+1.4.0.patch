diff --git a/node_modules/react-native-walkthrough-tooltip/src/tooltip.d.ts b/node_modules/react-native-walkthrough-tooltip/src/tooltip.d.ts
index 5a7ef59..31ce815 100644
--- a/node_modules/react-native-walkthrough-tooltip/src/tooltip.d.ts
+++ b/node_modules/react-native-walkthrough-tooltip/src/tooltip.d.ts
@@ -2,7 +2,7 @@
 // Original definitions by: Siraj Alam https://github.com/sirajalam049
 
 declare module 'react-native-walkthrough-tooltip' {
-  import React from 'react';
+  import React, {PropsWithChildren} from 'react';
   import { GestureResponderEvent, StyleProp, ViewStyle } from 'react-native';
 
   type Orientation =
@@ -122,6 +122,17 @@ declare module 'react-native-walkthrough-tooltip' {
     */
     topAdjustment?: number;
 
+    /**
+     * Horizontal adjustment in pixels for the container. If for some reason the alignment of the child element we are
+     * highlighting is off, the horizontalAdjustment prop can be used to tweak the horizontal positioning of the child
+     * element which we are highlighting.
+     ```js
+        // Usage Example
+        <Tooltip horizontalAdjustment={-84} />
+     ```
+     */
+     horizontalAdjustment?: number;
+
     /**
      *Set this to false if you want to override the default accessible on the root TouchableWithoutFeedback
      */
@@ -166,7 +177,7 @@ declare module 'react-native-walkthrough-tooltip' {
         </Tooltip>
     ```
      */
-  class Tooltip extends React.Component<TooltipProps> {}
+  class Tooltip extends React.Component<PropsWithChildren<TooltipProps>> {}
 
   export default Tooltip;
 }
diff --git a/node_modules/react-native-walkthrough-tooltip/src/tooltip.js b/node_modules/react-native-walkthrough-tooltip/src/tooltip.js
index db612fd..9ceabfd 100644
--- a/node_modules/react-native-walkthrough-tooltip/src/tooltip.js
+++ b/node_modules/react-native-walkthrough-tooltip/src/tooltip.js
@@ -74,6 +74,7 @@ class Tooltip extends Component {
     useInteractionManager: false,
     useReactNativeModal: true,
     topAdjustment: 0,
+    horizontalAdjustment: 0,
     accessible: true,
   };
 
@@ -104,6 +105,7 @@ class Tooltip extends Component {
     useInteractionManager: PropTypes.bool,
     useReactNativeModal: PropTypes.bool,
     topAdjustment: PropTypes.number,
+    horizontalAdjustment: PropTypes.number,
     accessible: PropTypes.bool,
   };
 
@@ -357,7 +359,11 @@ class Tooltip extends Component {
   };
 
   renderChildInTooltip = () => {
-    const { height, width, x, y } = this.state.childRect;
+    let { height, width, x, y } = this.state.childRect;
+
+    if (this.props.horizontalAdjustment) {
+      x = x + this.props.horizontalAdjustment;
+    }
 
     const onTouchEnd = () => {
       if (this.props.closeOnChildInteraction) {
