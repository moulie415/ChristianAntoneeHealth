diff --git a/node_modules/react-native-fast-image/android/build.gradle b/node_modules/react-native-fast-image/android/build.gradle
index 5b21cd5..4ded8eb 100644
--- a/node_modules/react-native-fast-image/android/build.gradle
+++ b/node_modules/react-native-fast-image/android/build.gradle
@@ -65,4 +65,5 @@ dependencies {
     implementation "com.github.bumptech.glide:glide:${glideVersion}"
     implementation "com.github.bumptech.glide:okhttp3-integration:${glideVersion}"
     annotationProcessor "com.github.bumptech.glide:compiler:${glideVersion}"
+    implementation 'jp.wasabeef:glide-transformations:4.2.0'
 }
diff --git a/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewConverter.java b/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewConverter.java
index d86f66f..bd1ccde 100644
--- a/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewConverter.java
+++ b/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewConverter.java
@@ -32,6 +32,7 @@ import java.util.Map;
 import javax.annotation.Nullable;
 
 import static com.bumptech.glide.request.RequestOptions.signatureOf;
+import jp.wasabeef.glide.transformations.BlurTransformation;
 
 class FastImageViewConverter {
     private static final Drawable TRANSPARENT_DRAWABLE = new ColorDrawable(Color.TRANSPARENT);
@@ -123,6 +124,10 @@ class FastImageViewConverter {
             options = options.apply(signatureOf(ApplicationVersionSignature.obtain(context)));
         }
 
+        if (source.hasKey("blurRadius")) {
+          options.transform(new BlurTransformation(source.getInt("blurRadius"), 3));
+        }
+
         return options;                
     }
 
diff --git a/node_modules/react-native-fast-image/dist/index.cjs.js b/node_modules/react-native-fast-image/dist/index.cjs.js
index 2a49562..51f2409 100644
--- a/node_modules/react-native-fast-image/dist/index.cjs.js
+++ b/node_modules/react-native-fast-image/dist/index.cjs.js
@@ -43,6 +43,7 @@ function FastImageBase({
   children,
   // eslint-disable-next-line no-shadow
   resizeMode = 'cover',
+  blurRadius,
   forwardedRef,
   ...props
 }) {
@@ -56,13 +57,14 @@ function FastImageBase({
       ref: forwardedRef
     }, /*#__PURE__*/React__default['default'].createElement(reactNative.Image, _extends__default['default']({}, props, {
       style: reactNative.StyleSheet.absoluteFill,
-      source: resolvedSource,
+      source:{...resolvedSource, blurRadius },
       onLoadStart: onLoadStart,
       onProgress: onProgress,
       onLoad: onLoad,
       onError: onError,
       onLoadEnd: onLoadEnd,
-      resizeMode: resizeMode
+      resizeMode: resizeMode,
+      blurRadius: blurRadius,
     })), children);
   }
 
@@ -73,13 +75,14 @@ function FastImageBase({
   }, /*#__PURE__*/React__default['default'].createElement(FastImageView, _extends__default['default']({}, props, {
     tintColor: tintColor,
     style: reactNative.StyleSheet.absoluteFill,
-    source: resolvedSource,
+    source:{...resolvedSource, blurRadius },
     onFastImageLoadStart: onLoadStart,
     onFastImageProgress: onProgress,
     onFastImageLoad: onLoad,
     onFastImageError: onError,
     onFastImageLoadEnd: onLoadEnd,
-    resizeMode: resizeMode
+    resizeMode: resizeMode,
+    blurRadius: blurRadius,
   })), children);
 }
 
diff --git a/node_modules/react-native-fast-image/dist/index.d.ts b/node_modules/react-native-fast-image/dist/index.d.ts
index 8a91257..274af72 100644
--- a/node_modules/react-native-fast-image/dist/index.d.ts
+++ b/node_modules/react-native-fast-image/dist/index.d.ts
@@ -89,6 +89,7 @@ export interface FastImageProps extends AccessibilityProps, ViewProps {
      * Render children within the image.
      */
     children?: React.ReactNode;
+    blurRadius?: number;
 }
 export interface FastImageStaticProperties {
     resizeMode: typeof resizeMode;
@@ -97,6 +98,7 @@ export interface FastImageStaticProperties {
     preload: (sources: Source[]) => void;
     clearMemoryCache: () => Promise<void>;
     clearDiskCache: () => Promise<void>;
+    blurRadius?: number;
 }
 declare const FastImage: React.ComponentType<FastImageProps> & FastImageStaticProperties;
 export default FastImage;
diff --git a/node_modules/react-native-fast-image/dist/index.js b/node_modules/react-native-fast-image/dist/index.js
index 1fc0e9d..a997a48 100644
--- a/node_modules/react-native-fast-image/dist/index.js
+++ b/node_modules/react-native-fast-image/dist/index.js
@@ -36,6 +36,7 @@ function FastImageBase({
   children,
   // eslint-disable-next-line no-shadow
   resizeMode = 'cover',
+  blurRadius,
   forwardedRef,
   ...props
 }) {
@@ -49,13 +50,14 @@ function FastImageBase({
       ref: forwardedRef
     }, /*#__PURE__*/React.createElement(Image, _extends({}, props, {
       style: StyleSheet.absoluteFill,
-      source: resolvedSource,
+      source: {...resolvedSource, blurRadius },
       onLoadStart: onLoadStart,
       onProgress: onProgress,
       onLoad: onLoad,
       onError: onError,
       onLoadEnd: onLoadEnd,
-      resizeMode: resizeMode
+      resizeMode: resizeMode,
+      blurRadius: blurRadius,
     })), children);
   }
 
@@ -66,13 +68,14 @@ function FastImageBase({
   }, /*#__PURE__*/React.createElement(FastImageView, _extends({}, props, {
     tintColor: tintColor,
     style: StyleSheet.absoluteFill,
-    source: resolvedSource,
+    source: {...resolvedSource, blurRadius },
     onFastImageLoadStart: onLoadStart,
     onFastImageProgress: onProgress,
     onFastImageLoad: onLoad,
     onFastImageError: onError,
     onFastImageLoadEnd: onLoadEnd,
-    resizeMode: resizeMode
+    resizeMode: resizeMode,
+    blurRadius: blurRadius,
   })), children);
 }
 
diff --git a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.h b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.h
index fb557cf..2bd654d 100644
--- a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.h
+++ b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.h
@@ -18,6 +18,7 @@
 @property (nonatomic, assign) RCTResizeMode resizeMode;
 @property (nonatomic, strong) FFFastImageSource *source;
 @property (nonatomic, strong) UIColor *imageColor;
+@property (nonatomic, assign) CGFloat blurRadius;
 
 @end
 
diff --git a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.m b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.m
index 9c0f1d3..d6f7f26 100644
--- a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.m
+++ b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageView.m
@@ -196,10 +196,11 @@ - (void)reloadImage
 
 - (void)downloadImage:(FFFastImageSource *) source options:(SDWebImageOptions) options context:(SDWebImageContext *)context {
     __weak typeof(self) weakSelf = self; // Always use a weak reference to self in blocks
+    id<SDImageTransformer> transformer = [SDImageBlurTransformer transformerWithRadius:_blurRadius];
     [self sd_setImageWithURL:_source.url
             placeholderImage:nil
                      options:options
-                     context:context
+                     context: _blurRadius ? @{SDWebImageContextImageTransformer: transformer} : context
                     progress:^(NSInteger receivedSize, NSInteger expectedSize, NSURL * _Nullable targetURL) {
                         if (weakSelf.onFastImageProgress) {
                             weakSelf.onFastImageProgress(@{
diff --git a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageViewManager.m b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageViewManager.m
index a8059af..1116e58 100644
--- a/node_modules/react-native-fast-image/ios/FastImage/FFFastImageViewManager.m
+++ b/node_modules/react-native-fast-image/ios/FastImage/FFFastImageViewManager.m
@@ -20,6 +20,7 @@ - (FFFastImageView*)view {
 RCT_EXPORT_VIEW_PROPERTY(onFastImageLoad, RCTDirectEventBlock)
 RCT_EXPORT_VIEW_PROPERTY(onFastImageLoadEnd, RCTDirectEventBlock)
 RCT_REMAP_VIEW_PROPERTY(tintColor, imageColor, UIColor)
+RCT_EXPORT_VIEW_PROPERTY(blurRadius, CGFloat)
 
 RCT_EXPORT_METHOD(preload:(nonnull NSArray<FFFastImageSource *> *)sources)
 {
